# Generated by Django 4.2.6 on 2023-11-24 09:47

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HBulletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(blank=True, max_length=1024, null=True)),
                ('date', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'h_bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HDept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', models.CharField(max_length=10)),
                ('permission', models.IntegerField()),
            ],
            options={
                'db_table': 'h_dept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chinese_name', models.CharField(blank=True, max_length=128, null=True)),
                ('english_name', models.CharField(blank=True, max_length=128, null=True)),
                ('dosage', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'h_medicine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstvisit_date', models.CharField(max_length=20)),
                ('patientname', models.CharField(max_length=20)),
                ('gender', models.IntegerField()),
                ('id_num', models.CharField(max_length=10)),
                ('birth_date', models.CharField(max_length=20)),
                ('dept_id', models.IntegerField()),
                ('phone', models.IntegerField()),
                ('address', models.CharField(max_length=30)),
                ('e_mail', models.CharField(db_column='e-mail', max_length=30)),
                ('chart_id', models.IntegerField()),
                ('blood_type', models.CharField(max_length=2)),
                ('d_rh', models.IntegerField()),
                ('organ_donation', models.IntegerField(db_column='organ-donation')),
                ('dnr', models.IntegerField()),
                ('participant_cat', models.CharField(max_length=2)),
                ('health_insurance', models.IntegerField()),
            ],
            options={
                'db_table': 'h_patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=5)),
                ('username', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=64)),
                ('create_time', models.CharField(max_length=10)),
                ('s_c_name', models.CharField(max_length=20)),
                ('s_e_name', models.CharField(max_length=32)),
                ('gender', models.IntegerField()),
                ('position', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'h_staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HCasehistory',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='patient_management_app.hpatient')),
                ('food_allergies', models.CharField(max_length=500)),
                ('medicine_allergies', models.CharField(max_length=500)),
                ('family_inheritance', models.CharField(max_length=500)),
                ('infectious_disease', models.CharField(max_length=500)),
                ('major_injury', models.CharField(max_length=500)),
                ('surgical_record', models.CharField(max_length=1000)),
                ('doctor_advice', models.CharField(max_length=1000)),
                ('remark', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'h_casehistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('staff', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_management_app.hstaff')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
